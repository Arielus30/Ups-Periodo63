/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.ups.est.practica6_ficheros.vista;

import ec.edu.ups.est.practica6_ficheros.controlador.FilesControlador;
import ec.edu.ups.est.practica6_ficheros.modelo.Files;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private Files modelo;
    private FilesControlador controlador;
    DefaultListModel modeloList = new DefaultListModel();
    
    
    public VentanaPrincipal() {
        initComponents();
        modelo = new Files();
        jList1.setModel(modeloList);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnListarDirec = new javax.swing.JButton();
        btnListarArchivosOcultos = new javax.swing.JButton();
        btnListarDirecOcultos = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiCrear = new javax.swing.JMenuItem();
        jmiEliminar = new javax.swing.JMenuItem();
        jmiRenombrar = new javax.swing.JMenuItem();
        jmiSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ruta:");

        txtRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutaActionPerformed(evt);
            }
        });

        btnListarDirec.setText("Listar Direcctorios");
        btnListarDirec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDirecActionPerformed(evt);
            }
        });

        btnListarArchivosOcultos.setText("Listar Archivos Ocultos");
        btnListarArchivosOcultos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarArchivosOcultosActionPerformed(evt);
            }
        });

        btnListarDirecOcultos.setText("Listar Direcctorios Ocultos");
        btnListarDirecOcultos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDirecOcultosActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar Informacion");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        jMenu1.setText("Gestionar Directorio");

        jmiCrear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiCrear.setText("Crear");
        jmiCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCrearActionPerformed(evt);
            }
        });
        jMenu1.add(jmiCrear);

        jmiEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiEliminar.setText("Eliminar");
        jmiEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEliminarActionPerformed(evt);
            }
        });
        jMenu1.add(jmiEliminar);

        jmiRenombrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiRenombrar.setText("Renombrar");
        jmiRenombrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRenombrarActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRenombrar);

        jmiSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiSalir.setText("Salir");
        jmiSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSalirActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(btnListarDirec)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnListarArchivosOcultos)
                                .addGap(44, 44, 44)
                                .addComponent(btnListarDirecOcultos))
                            .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(btnMostrar)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListarDirec)
                    .addComponent(btnListarArchivosOcultos)
                    .addComponent(btnListarDirecOcultos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMostrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutaActionPerformed

    private void jmiSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSalirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmiSalirActionPerformed

    private void jmiEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEliminarActionPerformed
       
        String selec = jList1.getSelectedValue().toString(); 

        int conf = JOptionPane.showConfirmDialog(null, 
            "¿Está seguro de eliminar " + selec + "?", 
            "Confirmar eliminación", 
            JOptionPane.YES_NO_OPTION);

        if (conf == JOptionPane.YES_OPTION) {
        
            boolean result = modelo.eliminar(selec);
            
            if (result) {
                JOptionPane.showMessageDialog(null, "Eliminado con éxito.");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar.");
            }
        }
    }//GEN-LAST:event_jmiEliminarActionPerformed

    private void jmiCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCrearActionPerformed
       
        String nomArchivo = JOptionPane.showInputDialog("Ingrese el nombre del archivo:::::");
        if (nomArchivo == null || nomArchivo.trim().isEmpty()) {
            System.out.println("No se proporcionó un nombre de archivo válido.");
            return;
        }

        Files modelo = new Files ();

        boolean resul = modelo.crearDirectorio(nomArchivo);

        if (resul) {
            JOptionPane.showMessageDialog(null, "Creado Exitosamaente.");
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo Crear");
        }
    }//GEN-LAST:event_jmiCrearActionPerformed

    private void btnListarDirecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDirecActionPerformed
        modeloList.removeAllElements();
        try {
        File ruta = new File(txtRuta.getText());
        File[] elementos = ruta.listFiles();
        for(File subElemento : elementos) {
            if (!subElemento.isHidden()) {
            modeloList.addElement(subElemento.getAbsolutePath());
            }
        }
        } catch(Exception nombre) {
            System.err.println("Error: " + nombre.getMessage());
        }
    }//GEN-LAST:event_btnListarDirecActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        String elemento = txtRuta.getText() + File.separator + jList1.getSelectedValue();
        File ruta = new File(elemento);
        String elemento2 = jList1.getSelectedValue();
        File ruta1 = new File(elemento2);
        
        if (ruta.exists()) {
            
            jTextArea.setText("----");
            jTextArea.append("Nombre:" + ruta.getName()+ "\n");
            jTextArea.append("Ruta:" + ruta.getAbsolutePath()+ "\n");
            jTextArea.append("Tamaño:" + ruta.length()+ "\n");
            jTextArea.append("Permiso de lecturas:" + ruta.canRead() + "\n");
            jTextArea.append("Permiso de escritura:" + ruta.canWrite() + "\n");
            SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            jTextArea.append("Ultima modificacion:" +fecha.format(ruta.lastModified())+ "\n");
        }else if (ruta1.exists()) {
            jTextArea.setText("----");
            jTextArea.append("Nombre:" + ruta.getName()+ "\n");
            jTextArea.append("Ruta:" + ruta.getAbsolutePath()+ "\n");
            jTextArea.append("Tamaño:" + ruta.length()+ "\n");
            jTextArea.append("Permiso de lecturas:" + ruta.canRead() + "\n");
            jTextArea.append("Permiso de escritura:" + ruta.canWrite() + "\n");
            SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            jTextArea.append("Ultima modificacion:" +fecha.format(ruta.lastModified())+ "\n");
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnListarArchivosOcultosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarArchivosOcultosActionPerformed
   modeloList.removeAllElements();
    try {
        File ruta = new File(txtRuta.getText());
        File[] elementos = ruta.listFiles();

        if (elementos != null) {
            for (File subElemento : elementos) {
                if (subElemento.isHidden()) {
                    modeloList.addElement(subElemento.getName());
                }
            }
        } else {
            System.out.println("La ruta no contiene archivos.");
        }
    } catch (Exception e) {
        System.err.println("Error: " + e.getMessage());
    }
                                   
    }//GEN-LAST:event_btnListarArchivosOcultosActionPerformed

    private void btnListarDirecOcultosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDirecOcultosActionPerformed
        modeloList.removeAllElements();
    try {
        File ruta = new File(txtRuta.getText());
        File[] elementos = ruta.listFiles();

        if (elementos != null) {
            for (File subElemento : elementos) {
                if (subElemento.isHidden()) {
                    modeloList.addElement(subElemento.getAbsolutePath());
                }
            }
        } else {
            System.out.println("La ruta no contiene archivos.");
        }
    } catch (Exception e) {
        System.err.println("Error: " + e.getMessage());
    }
    }//GEN-LAST:event_btnListarDirecOcultosActionPerformed

    private void jmiRenombrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRenombrarActionPerformed

        String rutaActual = jList1.getSelectedValue().toString();
        if (rutaActual != null && !rutaActual.trim().isEmpty()) {
           
            String nuevoNombre = JOptionPane.showInputDialog("Ingresa el nuevo nombre: ");
        
            if (nuevoNombre != null && !nuevoNombre.trim().isEmpty()) {
        
               
               
                boolean resultado = modelo.editar(rutaActual, nuevoNombre);

                if (resultado) {
                    JOptionPane.showMessageDialog(null, "Directorio renombrado exitosamente a " + nuevoNombre);
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Error al renombrar el directorio");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Operación cancelada o nombre inválido.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún elemento para renombrar.");
        }
    }//GEN-LAST:event_jmiRenombrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarArchivosOcultos;
    private javax.swing.JButton btnListarDirec;
    private javax.swing.JButton btnListarDirecOcultos;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JMenuItem jmiCrear;
    private javax.swing.JMenuItem jmiEliminar;
    private javax.swing.JMenuItem jmiRenombrar;
    private javax.swing.JMenuItem jmiSalir;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
